export const systemLanguage = "ru-RU";
import { readFileSync, writeFileSync } from "fs";
export const localizationNames = {
    welcome: "wab_welcome".toLowerCase(),
    sendFullName: "wab_sendFullName".toLowerCase(),
    sendRefCode: "wab_sendRefCode".toLowerCase(),
    registrationError: "wab_registrationError".toLowerCase(),
    registrationSuccessful: "wab_registrationSuccessful".toLowerCase(),
    collectionTo: "wab_collectionTo".toLowerCase(),
    collectionPeopleCount: "wab_collectionPeopleCount".toLowerCase(),
    topPlacesLower: "wab_topPlacesLower".toLowerCase(),
    handbookLower: "wab_handbookLower".toLowerCase(),
    cancelLower: "wab_cancelLower".toLowerCase(),
    orderCreatingCancel: "wab_orderCreatingCancel".toLowerCase(),
    incorrectImageMediaType: "wab_incorrectImageMediaType".toLowerCase(),
    incorrectTextMessageType: "wab_incorrectTextMessageType".toLowerCase(),
    incorrectNumeric: "wab_incorrectNumeric".toLowerCase(),
    largeFileSize: "wab_largeFileSize".toLowerCase(),
    qrScanFailed: "wab_qrScanFailed".toLowerCase(),
    tooManyPeople: "wab_tooManyPeople".toLowerCase(),
    tooFewPeople: "wab_tooFewPeople".toLowerCase(),
    collectionWhen: "wab_collectionWhen".toLowerCase(),
    errorGeolocation: "wab_errorGeolocation".toLowerCase(),
    locationNotFound: "wab_locationNotFound".toLowerCase(),
    votingLower: "wab_votingLower".toLowerCase(),
    nowLower: "wab_nowLower".toLowerCase(),
    getTimestampError: "wab_getTimestampError".toLowerCase(),
    timestampTimeout: "wab_timestampTimeout".toLowerCase(),
    collectionOrderConfirm: "wab_collectionOrderConfirm".toLowerCase(),
    collectionOrderConfirmTestMode:
        "wab_collectionOrderConfirmTestMode".toLowerCase(),
    confirmLower: "wab_confirmLower".toLowerCase(),
    confirmPrompt: "wab_confirmPrompt".toLowerCase(),
    votingActivated: "wab_votingActivated".toLowerCase(),
    error: "wab_error".toLowerCase(),
    stateProcessing: "wab_stateProcessing".toLowerCase(),
    stateApproved: "wab_stateApproved".toLowerCase(),
    stateCanceled: "wab_stateCanceled".toLowerCase(),
    stateCompleted: "wab_stateCompleted".toLowerCase(),
    stateOther: "wab_stateOther".toLowerCase(),
    creatingOrder: "wab_creatingOrder".toLowerCase(),
    errorWhenCreatingOrder: "wab_errorWhenCreatingOrder".toLowerCase(),
    orderCreated: "wab_orderCreated".toLowerCase(),
    collectionCancelReason: "wab_collectionCancelReason".toLowerCase(),
    orderCanceled: "wab_orderCanceled".toLowerCase(),
    cancelCanceled: "wab_cancelCanceled".toLowerCase(),
    orderCompleted: "wab_orderCompleted".toLowerCase(),
    rateSet: "wab_rateSet".toLowerCase(),
    closeReasonSpecified: "wab_closeReasonSpecified".toLowerCase(),
    stateWaitingVotingDriver: "wab_stateWaitingVotingDriver".toLowerCase(),
    refCodeInvalid: "wab_refCodeInvalid".toLowerCase(),
    votingExtended: "wab_votingExtended".toLowerCase(),
    driverArrived: "wab_driverArrived".toLowerCase(),
    driverCanceled: "wab_driverCanceled".toLowerCase(),
    driverCompleted: "wab_driverCompleted".toLowerCase(),
    driverStarted: "wab_driverStarted".toLowerCase(),
    cancelDigital: "wab_cancelDigital".toLowerCase(),
    defaultPrompt: "wab_defaultPrompt".toLowerCase(),
    commandNotFound: "wab_commandNotFound".toLowerCase(),
    settingsMenu: "wab_settingsMenu".toLowerCase(),
    selectLanguage: "wab_selectLanguage".toLowerCase(),
    langSelectedBakingToSettings:
        "wab_langSelectedBakingToSettings".toLowerCase(),
    carModelNotSpecified: "wab_carModelNotSpecified".toLowerCase(),
    carColorNotSpecified: "wab_carColorNotSpecified".toLowerCase(),
    enterStartPoint: "wab_enterStartPoint".toLowerCase(),
    votingVerificationCode: "wab_votingVerificationCode".toLowerCase(),
    orderCancellationInterrupted:
        "wab_orderCancellationInterrupted".toLowerCase(),
    answerBackLower: "wab_answerBackLower".toLowerCase(),
    tomorrowLower: "wab_tomorrowLower".toLowerCase(),
    votingTimer: "wab_votingTimer".toLowerCase(),
    votingTimerNotification: "wab_votingTimerNotification".toLowerCase(),
    votingTimerExpired: "wab_votingTimerExpired".toLowerCase(),
    extendVotingTimeLower: "wab_extendVotingTimeLower".toLowerCase(),
    votingTimerNotActive: "wab_votingTimerNotActive".toLowerCase(),
    orderClosedByAPI: "wab_orderClosedByAPI".toLowerCase(),
    newReferralCodeCollection: "wab_newReferralCodeCollection".toLowerCase(),
    changeReferralCodeSuccess: "wab_changeReferralCodeSuccess".toLowerCase(),
    changeReferralCodeErrorEqual:
        "wab_changeReferralCodeErrorEqual".toLowerCase(),
    help: "wab_help".toLowerCase(),
    needAdditionalOptionsQuestion:
        "wab_needAdditionalOptionsQuestion".toLowerCase(),
    selectAdditionalOptions: "wab_selectAdditionalOptions".toLowerCase(),
    collectionAdditionalOptionsError:
        "wab_collectionAdditionalOptionsError".toLowerCase(),
    commentReceived: "wab_commentReceived".toLowerCase(),
    enterStartPriceSum: "wab_enterStartPriceSum".toLowerCase(),
    enterStartPriceCommandNotFoundRide:
        "wab_enterStartPriceCommandNotFoundRide".toLowerCase(),
    extendingStartPriceClosed: "wab_extendingStartPriceClosed".toLowerCase(),
    enterStartPriceSumMustBeNumber:
        "wab_enterStartPriceSumMustBeNumber".toLowerCase(),
    enterStartPriceSumMustBePositive:
        "wab_enterStartPriceSumMustBePositive".toLowerCase(),
    startPriceExtended: "wab_startPriceExtended".toLowerCase(),
    helpStartPoint: "wab_helpStartPoint".toLowerCase(),
    helpEndPoint: "wab_helpEndPoint".toLowerCase(),
    settingsTestModeHint: "wab_settingsTestModeHint".toLowerCase(),
    settingsTestModeActive: "wab_settingsTestModeActive".toLowerCase(),
    settingsPreviousReferralCode:
        "wab_settingsPreviousReferralCode".toLowerCase(),
    settingsExitTestModeError: "wab_settingsExitTestModeError".toLowerCase(),
    invalidReferralCode: "wab_invalidReferralCode".toLowerCase(),
    public_offers: "wab_public_offers".toLowerCase(),
    privacy_policy: "wab_privacy_policy".toLowerCase(),
    legal_information: "wab_legal_information".toLowerCase(),
    reject_terms: "wab_reject_terms".toLowerCase(),
    invalid_language: "wab_invalid_language".toLowerCase(),
    public_offers_big: "wab_public_offers_big".toLowerCase(),
    privacy_policy_big: "wab_privacy_policy_big".toLowerCase(),
    legal_information_big: "wab_legal_information_big".toLowerCase(),
    expand_doc: "wab_expand_doc".toLowerCase(),
    collapse_doc: "wab_collapse_doc".toLowerCase(),
    next_step: "wab_next_step".toLowerCase(),
    accept_doc: "wab_accept_doc".toLowerCase(),
    calculatingRoute: "wab_calculatingRoute".toLowerCase(),
    askDeleteAccount: "wab_askDeleteAccount".toLowerCase(),
    accountDeleted: "wab_accountDeleted".toLowerCase(),
    accountDeletionCanceled: "wab_accountDeletionCanceled".toLowerCase(),
    accountRecovery: "wab_accountRecovery".toLowerCase(),
    askShowCarClass: "wab_askShowCarClass".toLowerCase(),
    selectCarClass: "wab_selectCarClass".toLowerCase(),
    anyClass: "wab_anyClass".toLowerCase(),
    enterHoursCount: "wab_enterHoursCount".toLowerCase(),
    hoursNumberMystBeNumber: "wab_hoursNumberMystBeNumber".toLowerCase(),
    enterChildrenCount: "wab_enterChildrenCount".toLowerCase(),
    childrenCountMustBeNumber: "wab_childrenCountMustBeNumber".toLowerCase(),
    selectChildGender: "wab_selectChildGender".toLowerCase(),
    profileNumberPattern: "wab_profileNumberPattern".toLowerCase(),
    selectChildAge: "wab_selectChildAge".toLowerCase(),
    childAgeMustBeNumber: "wab_childAgeMustBeNumber".toLowerCase(),
    enterChildName: "wab_enterChildName".toLowerCase(),
    enterChildDetails: "wab_enterChildDetails".toLowerCase(),
    selectBabySisterRange: "wab_selectBabySisterRange".toLowerCase(),
    noDrivers: "wab_noDrivers".toLowerCase(),
    childrenInfoShortedVariant: "wab_childrenInfoShortedVariant".toLowerCase(),

    noDriverNumbersForExclusion: "wab_noDriverNumbersForExclusion".toLowerCase(),
    incorrectDriverNumber: "wab_incorrectDriverNumber".toLowerCase(),
    noDriverNumbersSpecified: "wab_noDriverNumbersSpecified".toLowerCase(),
    searchingForDrivers: "wab_searchingForDrivers".toLowerCase(),
    errorNoTimeUndefined: "wab_errorNoTimeUndefined".toLowerCase(),
    searchCancelled: "wab_searchCancelled".toLowerCase(),
    errorNoCoordinates: "wab_errorNoCoordinates".toLowerCase(),
    noDriversFoundOrderCancelled: "wab_noDriversFoundOrderCancelled".toLowerCase(),
    noDriversAvailableAttempt: "wab_noDriversAvailableAttempt".toLowerCase(),
    noAdditionalOptions: "wab_noAdditionalOptions".toLowerCase(),
    errorStartPoint: "wab_errorStartPoint".toLowerCase(),
};